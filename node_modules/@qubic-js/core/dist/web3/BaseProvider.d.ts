/// <reference types="node" />
import EventEmitter from 'events';
import { JsonRpcResponse, JsonRpcSuccess, JsonRpcMiddleware } from 'json-rpc-engine';
import { Bridge, Request, SendAsync, Network } from '../types';
interface BaseProviderOptions {
    infuraProjectId?: string;
    network: Network;
    bridge: Bridge;
    middlewares: Array<JsonRpcMiddleware<unknown, unknown>>;
}
export declare class BaseProvider extends EventEmitter {
    private engine?;
    isQubic: boolean;
    static isJsonRpcSuccess<T>(rpc: JsonRpcResponse<T>): rpc is JsonRpcSuccess<T>;
    constructor(options: BaseProviderOptions);
    sendAsync: SendAsync;
    request: Request;
}
export default BaseProvider;
