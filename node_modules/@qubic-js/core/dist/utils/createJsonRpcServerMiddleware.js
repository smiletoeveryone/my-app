"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createJsonRpcServerMiddleware = void 0;
const eth_rpc_errors_1 = require("eth-rpc-errors");
const json_rpc_engine_1 = require("json-rpc-engine");
const jsonRpcRequest_1 = __importDefault(require("./jsonRpcRequest"));
function createJsonRpcServerMiddleware(options) {
    const { url } = options;
    return json_rpc_engine_1.createAsyncMiddleware((req, res) => __awaiter(this, void 0, void 0, function* () {
        try {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            const result = yield jsonRpcRequest_1.default(url, req.method, req.params);
            res.result = result;
        }
        catch (error) {
            if (error instanceof Error) {
                res.error = error;
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                res.error = eth_rpc_errors_1.ethErrors.rpc.parse(error.message);
            }
        }
    }));
}
exports.createJsonRpcServerMiddleware = createJsonRpcServerMiddleware;
